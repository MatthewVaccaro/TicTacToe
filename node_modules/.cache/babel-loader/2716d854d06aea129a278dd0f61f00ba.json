{"ast":null,"code":"export function checkWin(capturedSpots) {\n  const winning = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < winning.length; i++) {\n    const [a, b, c] = winning[i];\n    console.log('a', a);\n    console.log('b', b);\n    console.log('c', c);\n\n    if (capturedSpots[a] && capturedSpots[a] === capturedSpots[b] && capturedSpots[b] === capturedSpots[c]) {\n      console.log('capturedSpots[a]', capturedSpots[a]);\n      return capturedSpots[a];\n    }\n\n    return null;\n  }\n}","map":{"version":3,"sources":["/Users/mattvaccaro/Documents/git/ticTacToe/src/helpers.js"],"names":["checkWin","capturedSpots","winning","i","length","a","b","c","console","log"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,aAAlB,EAAiC;AACvC,QAAMC,OAAO,GAAG,CACf,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CADe,EAEf,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAFe,EAGf,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAHe,EAIf,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAJe,EAKf,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CALe,EAMf,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CANe,EAOf,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAPe,EAQf,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CARe,CAAhB;;AAWA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACxC,UAAM,CAAEE,CAAF,EAAKC,CAAL,EAAQC,CAAR,IAAcL,OAAO,CAACC,CAAD,CAA3B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBJ,CAAjB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBH,CAAjB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,CAAjB;;AACA,QAAIN,aAAa,CAACI,CAAD,CAAb,IAAoBJ,aAAa,CAACI,CAAD,CAAb,KAAqBJ,aAAa,CAACK,CAAD,CAAtD,IAA6DL,aAAa,CAACK,CAAD,CAAb,KAAqBL,aAAa,CAACM,CAAD,CAAnG,EAAwG;AACvGC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,aAAa,CAACI,CAAD,CAA7C;AACA,aAAOJ,aAAa,CAACI,CAAD,CAApB;AACA;;AACD,WAAO,IAAP;AACA;AACD","sourcesContent":["export function checkWin(capturedSpots) {\n\tconst winning = [\n\t\t[ 0, 1, 2 ],\n\t\t[ 3, 4, 5 ],\n\t\t[ 6, 7, 8 ],\n\t\t[ 0, 3, 6 ],\n\t\t[ 1, 4, 7 ],\n\t\t[ 2, 5, 8 ],\n\t\t[ 0, 4, 8 ],\n\t\t[ 2, 4, 6 ]\n\t];\n\n\tfor (let i = 0; i < winning.length; i++) {\n\t\tconst [ a, b, c ] = winning[i];\n\t\tconsole.log('a', a);\n\t\tconsole.log('b', b);\n\t\tconsole.log('c', c);\n\t\tif (capturedSpots[a] && capturedSpots[a] === capturedSpots[b] && capturedSpots[b] === capturedSpots[c]) {\n\t\t\tconsole.log('capturedSpots[a]', capturedSpots[a]);\n\t\t\treturn capturedSpots[a];\n\t\t}\n\t\treturn null;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}