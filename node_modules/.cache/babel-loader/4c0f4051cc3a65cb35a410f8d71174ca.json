{"ast":null,"code":"var _jsxFileName = \"/Users/mattvaccaro/Documents/git/ticTacToe/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css'; //Components\n\nimport Board from './board'; //Helper\n\nimport * as helpers from './helpers';\n\nfunction App() {\n  const {\n    checkWin\n  } = helpers;\n  const [space, setSpace] = useState(Array(9).fill(null));\n  const [turn, setTurn] = useState('X');\n  const [game, setGame] = useState(null);\n\n  function capture(index) {\n    //carbon copy board\n    const updateBoard = [...space]; //Check to see if the spot is open\n\n    if (updateBoard[index] !== null) return; // If spot open than update carbon copy with either X or O based on turn\n\n    updateBoard.splice(index, 1, turn === 'X' ? 'X' : 'O'); //Update the state for a rerender\n\n    setSpace(updateBoard); //Change the turn based up current turn\n\n    setTurn(turn === 'X' ? 'O' : 'X'); //Checkboard for winning combination\n\n    setGame(checkWin(updateBoard));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, \" \", `${game} is the Fucking Winner! `, \" \"), /*#__PURE__*/React.createElement(Board, {\n    space: space,\n    capture: capture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mattvaccaro/Documents/git/ticTacToe/src/App.js"],"names":["React","useState","Board","helpers","App","checkWin","space","setSpace","Array","fill","turn","setTurn","game","setGame","capture","index","updateBoard","splice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;;AAEA,SAASC,GAAT,GAAe;AACd,QAAM;AAAEC,IAAAA;AAAF,MAAeF,OAArB;AACA,QAAM,CAAEG,KAAF,EAASC,QAAT,IAAsBN,QAAQ,CAACO,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAApC;AACA,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBV,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAAEW,IAAF,EAAQC,OAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;;AAEA,WAASa,OAAT,CAAiBC,KAAjB,EAAwB;AACvB;AACA,UAAMC,WAAW,GAAG,CAAE,GAAGV,KAAL,CAApB,CAFuB,CAGvB;;AACA,QAAIU,WAAW,CAACD,KAAD,CAAX,KAAuB,IAA3B,EAAiC,OAJV,CAKvB;;AACAC,IAAAA,WAAW,CAACC,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B,EAA6BL,IAAI,KAAK,GAAT,GAAe,GAAf,GAAqB,GAAlD,EANuB,CAOvB;;AACAH,IAAAA,QAAQ,CAACS,WAAD,CAAR,CARuB,CASvB;;AACAL,IAAAA,OAAO,CAACD,IAAI,KAAK,GAAT,GAAe,GAAf,GAAqB,GAAtB,CAAP,CAVuB,CAWvB;;AACAG,IAAAA,OAAO,CAACR,QAAQ,CAACW,WAAD,CAAT,CAAP;AACA;;AAED,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAO,GAAEJ,IAAK,0BAAd,MADD,eAEC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEN,KAAd;AAAqB,IAAA,OAAO,EAAEQ,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AAMA;;AAED,eAAeV,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n//Components\nimport Board from './board';\n//Helper\nimport * as helpers from './helpers';\n\nfunction App() {\n\tconst { checkWin } = helpers;\n\tconst [ space, setSpace ] = useState(Array(9).fill(null));\n\tconst [ turn, setTurn ] = useState('X');\n\tconst [ game, setGame ] = useState(null);\n\n\tfunction capture(index) {\n\t\t//carbon copy board\n\t\tconst updateBoard = [ ...space ];\n\t\t//Check to see if the spot is open\n\t\tif (updateBoard[index] !== null) return;\n\t\t// If spot open than update carbon copy with either X or O based on turn\n\t\tupdateBoard.splice(index, 1, turn === 'X' ? 'X' : 'O');\n\t\t//Update the state for a rerender\n\t\tsetSpace(updateBoard);\n\t\t//Change the turn based up current turn\n\t\tsetTurn(turn === 'X' ? 'O' : 'X');\n\t\t//Checkboard for winning combination\n\t\tsetGame(checkWin(updateBoard));\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1> {`${game} is the Fucking Winner! `} </h1>\n\t\t\t<Board space={space} capture={capture} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}